// Tasks to perform when no task is specified
defaultTasks 'clean', 'build', 'shadow'

apply plugin: 'java'
apply plugin: 'idea'
apply plugin: 'eclipse'
apply plugin: 'com.github.johnrengelman.shadow' // Provides dependency shading
apply plugin: 'license'

group = 'com.greatmancode'
version = '3.2.2-SNAPSHOT'
//archiveBaseName = "craftconomy3"
description = "Craftconomy3"
sourceCompatibility = 1.7
targetCompatibility = 1.7
ext.version = version;

//Variables for signing & other stuff
ext.url = 'https://github.com/greatman/craftconomy3'
ext.bukkitVersion = '1.7.9-R0.2'
ext."signing.keyId" = System.getenv("keyId")
ext."signing.secretKeyRingFile" = System.getenv("secretKeyRingFile")
ext."signing.password" = System.getenv("keyPassword")


ext.isReleaseVersion = !version.endsWith("SNAPSHOT")
if (ext.isReleaseVersion) {
    apply plugin: 'signing'
    signing {
        required = { isReleaseVersion && gradle.taskGraph.hasTask("uploadArchives") }
        sign configurations.archives
    }
}


def gitDescribe() {
    try {
        // determine git-describe output
        def stdout = new ByteArrayOutputStream()
        exec {
            commandLine 'git', 'describe', '--always', '--dirty=*'
            standardOutput = stdout
        }
        return stdout.toString().trim()
    } catch (e) {
        return "unknown"
    }
}
def getVersionName() {
    try {
        // determine git-describe output
        def version = gitDescribe()

        // add on jenkins or travis build information
        def jenkins_build = System.getenv("BUILD_NUMBER")
        def travis_build = System.getenv("TRAVIS_BUILD_NUMBER")
        if (jenkins_build != null) {
            version += "-b" + jenkins_build
        } else if (travis_build != null) {
            version += "-trv" + travis_build
        } else {
            version += "-dev"
        }

        return version
    } catch (e) {
        return "unknown-version"
    }
}

compileJava {
    options.encoding = 'UTF-8'
}

configurations.all {
    resolutionStrategy.cacheChangingModulesFor 0, 'seconds'
}

buildscript {
    repositories {
        jcenter()
    }
    dependencies {
        classpath 'com.github.jengelman.gradle.plugins:shadow:1.1.2'
        classpath 'nl.javadude.gradle.plugins:license-gradle-plugin:0.11.0'
    }
}

repositories {
    mavenLocal()
    mavenCentral()
    maven { url "http://oss.sonatype.org/content/repositories/snapshots" }
    maven { url "https://hub.spigotmc.org/nexus/content/groups/public/" }
    maven { url "http://repo.visualillusionsent.net/repository/public/" }
    maven { url "http://repo.larry1123.net/content/groups/public/" }
    maven { url "https://libraries.minecraft.net" }
    maven { url "http://repo.spongepowered.org/maven" }
    maven { url "http://repo.mcstats.org/content/repositories/releases/" }

}

dependencies {
    compile group: 'com.greatmancode', name: 'tools', version:'1.1'
    compile group: 'com.zaxxer', name: 'HikariCP', version:'1.4.0'
    compile group: 'org.javassist', name: 'javassist', version:'3.18.2-GA'
    compile group: 'org.slf4j', name: 'slf4j-api', version:'1.7.7'
    compile group: 'com.h2database', name: 'h2', version:'1.4.180'
    compile group: 'org.xerial', name: 'sqlite-jdbc', version:'3.7.15-M1'
    testCompile group: 'junit', name: 'junit', version:'4.11'
    testCompile group: 'org.bukkit', name: 'bukkit', version:'1.8-R0.1-SNAPHSOT'
    testCompile group: 'org.reflections', name: 'reflections', version:'0.9.9-RC1'
    compile group: 'org.projectlombok', name: 'lombok', version:'1.12.6'
}

shadowJar {
    dependencies {
        include(dependency('com.greatmancode:tools:1.1'))
        include(dependency('com.zaxxer:HikariCP:1.4.0'))
        include(dependency('org.javassist:javassist'))
        include(dependency('org.slf4j:slf4j-api:1.7.7'))
        include(dependency('com.h2database:h2:1.4.180'))
    }
    relocate 'com.greatmancode.tools', 'com.greatmancode.craftconomy3.tools'
    relocate 'com.zaxxer.hikari', 'com.greatmancode.com.zaxxer.hikari'
    relocate 'javassist', 'com.greatmancode.javassist'
    relocate 'org.slf4j', 'com.greatmancode.org.slf4j'
    //baseName = 'craftconomy3'
    classifier = ''
}

task filter(type: Copy) {
    from ('src/main/resources') {
        exclude 'config.yml'
        exclude 'loader.yml'
    }
    into 'build/resources/main'
    def versionFinal = version + "-" + getVersionName()
    expand(version: versionFinal)
}

jar.dependsOn filter

license {
    header rootProject.file('HEADER.txt')
    ext.copyright = 'Copyright (c) 2011-2014, Greatman'
    ext.url = 'http://github.com/greatman'
    ext.name = 'Craftconomy3'
    skipExistingHeaders true //Temporary
}


// child script to publish to a maven repo
apply plugin: 'maven-publish'
apply plugin: 'maven'

// allow javadoc archive on Java 8 even if the javadoc isn't complete
if (JavaVersion.current().isJava8Compatible()) {
    allprojects {
        tasks.withType(Javadoc) {
            options.addStringOption('Xdoclint:none', '-quiet')
        }
    }
}

// source jar
task sourcesJar(type: Jar) {
    classifier = 'sources'
    from sourceSets.main.java.srcDirs
}

// javadoc jar
task javadocJar(type: Jar) {
    classifier = 'javadoc'
    from javadoc
}
artifacts {
    archives shadowJar, javadocJar, sourcesJar
}


uploadArchives {
    repositories {
        mavenDeployer {
            ext.isReleaseVersion = !version.endsWith("SNAPSHOT")
            if (ext.isReleaseVersion) {
                beforeDeployment { MavenDeployment deployment -> signing.signPom(deployment) }
            }

            repository( url: "https://oss.sonatype.org/service/local/staging/deploy/maven2/") {
                authentication(userName: System.getenv("sonatypeUsername"), password: System.getenv("sonatypePassword"))
            }

            snapshotRepository( url: "https://oss.sonatype.org/content/repositories/snapshots/") {
                authentication(userName: System.getenv("sonatypeUsername"), password: System.getenv("sonatypePassword"))
            }

            pom.project {
                name 'Craftconomy3'
                packaging 'jar'
                description 'Economy plugin for multiple Minecraft server implementation.'
                url 'https://github.com/greatman/craftconomy3'

                scm {
                    connection 'https://github.com/greatman/craftconomy3.git'
                    developerConnection 'https://github.com/greatman/craftconomy3.git'
                    url 'https://github.com/greatman/craftconomy3'
                }

                licenses {
                    license {
                        name 'LGPL v3'
                        url 'https://www.gnu.org/licenses/lgpl.html'
                    }
                }
                developers {
                    developer {
                        id 'greatman'
                        name 'William Lebel'
                        email 'lebelwilliam@gmail.com'
                    }
                }
                repositories {
                    repository {
                        id 'spigot-repo'
                        url 'https://hub.spigotmc.org/nexus/content/groups/public/'
                    }
                    repository {
                        id 'canary-repo'
                        url 'http://repo.visualillusionsent.net/repository/public/'
                    }
                    repository {
                        id 'larry-repo'
                        url 'http://repo.larry1123.net/content/groups/public/'
                    }
                    repository {
                        id 'minecraft-repo'
                        url 'https://libraries.minecraft.net'
                    }
                    repository {
                        id 'sponge-repo'
                        url 'http://repo.spongepowered.org/maven'
                    }
                    repository {
                        id 'metrics-repo'
                        url 'http://repo.mcstats.org/content/repositories/releases/'
                    }
                }
            }
        }
    }
}
